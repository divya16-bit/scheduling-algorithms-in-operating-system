package javaapplication25;
import java.util.*;

public class JavaApplication25 {
   public static void sort(int st,int a[],int b[],int pr[],int np)
{ 
    int i,j,t,p,z;
for(i=0;i<np-1;i++)
{
for(j=st;j<np-i-1;j++)
{
if(a[j]>a[j+1])
{
    t=a[j];     
    z=b[j];
    p=pr[j];
    a[j]=a[j+1];
    b[j]=b[j+1];
    pr[j]=pr[j+1];
    a[j+1]=t;  
    b[j+1]=z; pr[j+1]=p;
}
}
}
}
    
    public static void main(String[] args) {
        // TODO code application logic here
        Scanner sc=new Scanner(System.in);
   int n=sc.nextInt(); 
int p1[],t1[],i,np;
p1=new int[n];
t1=new int[n];
int arr[]=new int[n];
int tat[]=new int[n];
int wt[]=new int[n];
int resp[]=new int[n];
float rdelay[]=new float[n];
float atat;
float awt;
float aresp;
float ardelay;
int pgant[]=new int[n];
int tgant[]=new int[n];
int tex=0;
int a;
int trem[]=new int[n];
System.out.println("Enter no. of processes  : ");
np=sc.nextInt();
for(i=0;i<np;i++)
{
System.out.println("Enter the Process:"+i);
p1[i]=i;
System.out.println("Execution time : ");
t1[i]=sc.nextInt();
System.out.println("Arrival time   : ");
arr[i]=sc.nextInt();
}
System.out.println("PROCESSES\t\tEXECUTION TIME\t\tARRIVAL TIME");
for(i=0;i<np;i++)
{
System.out.println(" p "+p1[i]+"  \t\t\t"+t1[i]+"  \t\t\t"+arr[i]);
}
for(i=0;i<np;i++)
{ tex=tex+t1[i];
trem[i]=t1[i];
}
sort(0,arr,p1,t1,np);
tgant[0]=0;
int j=0;
int k=0;
int count=0;
int c=0;
while(count!=tex)
{
if(j!=np)
{       j=k;
for(i=k;i<np;i++)
{
if(arr[i]<=count)
j++;
else
break;
}
if((j-k)>1)
sort(k,trem,p1,arr,j);
}
while(trem[k]==0)
{
k++;

c++;
pgant[c-1]=p1[k];
if(j==np)
a=trem[k];
else
{ 
    if(trem[k] < (arr[j]-tgant[c-1]) )
       a=trem[k];
    else
       a=arr[j]-tgant[c-1];
}
tgant[c]=tgant[c-1]+a;
count=tgant[c];
trem[k]=trem[k]-(tgant[c]-tgant[c-1]);
if(c>1)
{
if(pgant[c-1]==pgant[c-2])
{ tgant[c-1]=tgant[c];
c--;
}
}
}
sort(0,arr,p1,trem,np);
for(i=0;i<np;i++)
{
wt[i]=0;
tat[i]=0;
resp[i]=-1;
}
for(i=0;i<c;i++)
{
for(j=0;j<np;j++)
{
if(pgant[i]==p1[j])
{
wt[j]=wt[j]+tgant[i]-tat[j];
if(resp[j]==-1)
resp[j]=tgant[i];
tat[j]=tgant[i+1] ;
break;
}
}
}
for(i=0;i<np;i++)
{
wt[i]=wt[i]-arr[i];
tat[i]=tat[i]-arr[i];
resp[i]=resp[i]-arr[i];
rdelay[i]=(float)tat[i]/t1[i];
}
atat=0;  awt=0;  aresp=0;  ardelay=0;
for(i=0;i<np;i++)
{
atat=atat+tat[i];
awt=awt+wt[i];
aresp=aresp+resp[i];
ardelay=ardelay+rdelay[i];
}
atat=atat/np;
awt=awt/np;
aresp=aresp/np;
ardelay=ardelay/np;

System.out.print("\nGANTT CHART:- ");
for(i=0;i<c;i++)
System.out.print("   P"+tgant[i]+"  ");

for(i=0;i<=c;i++)
System.out.print("    "+tgant[i]);

System.out.print("\n\nAverage waiting time      : "+awt);
System.out.print("\nAverage turn arround time : "+atat);
System.out.print("\nAverage response time     : "+aresp);
System.out.print("\nAverage relative delay    : "+ardelay);
    }
}
}
